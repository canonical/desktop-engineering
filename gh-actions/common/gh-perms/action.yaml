name: GH Token permission warnings
description: Checks if the GitHub token provided has too many permissions
inputs:
  token:
    description: The token to check for permissions
    required: true
  fail-for-push:
    description: The token cannot be used to push commits to the repo
    type: boolean
    default: true
  fail-for-pr:
    description: The token cannot create or modify pull requests
    type: boolean
    default: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      if: ${{ inputs.fail-for-push != 'false' }}
      continue-on-error: true
      with:
        path: '.source-checkout-${{ github.run_id }}'
        token: ${{ inputs.token }}
    - name: Check push permissions
      id: check_push
      if: ${{ inputs.fail-for-push != 'false' }}
      continue-on-error: true
      shell: bash
      working-directory: '.source-checkout-${{ github.run_id }}'
      env:
        GH_TOKEN: ${{ inputs.token }}
        REPO_PATH: ${{ github.repository }}
        REF_NAME: "refs/heads/${{ github.head_ref }}"
      run: |
        set -eu
        git config user.name github-actions[bot]
        git config user.email github-actions[bot]@users.noreply.github.com
        # Still fetches less stuff then checking out with fetch-depth: 0.
        git pull --rebase origin "$REF_NAME"
        git commit --allow-empty -m "DropMe: Pushing this commit should not work"
        # By default actions/checkout persists credentials so git would just work if the token used
        # to checkout the repo would allow it. But since users can unset 'persist-credentials:false'
        # this logic would fall apart. To prevent that let's use the token explicetely.
        # Construct the new push URL using the REPO_PATH from the github context
        git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${REPO_PATH}.git"
        if git push origin HEAD:"$REF_NAME"; then
          echo "::error::'token' has 'contents:write' permission, but it should be 'none' or 'read'."
          echo "status=failed" >> $GITHUB_OUTPUT
        fi
    - name: Clean up temporary checkout
      shell: bash
      if: always()
      continue-on-error: true
      run: |
        rm -rf '.source-checkout-${{ github.run_id }}'
    - name: Comment on current pull request
      # Only applicable on pull requests.
      if: ${{ inputs.fail-for-pr != 'false' && github.event_name == 'pull_request' }}
      id: check_pr
      continue-on-error: true
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        set -eu
        if gh pr comment -b "You should restrict the github token permissions of the '${{ github.job }}' job (ideally to none - 'permissions: {}')" ${{ github.event.pull_request.number }}; then
          echo "::error::'token' has 'pull-requests:write' permission, but it should be 'none' or 'read'."
          echo "status=failed" >> $GITHUB_OUTPUT
        fi
    - name: Fail
      if: steps.check_push.outputs.status == 'failed' || steps.check_pr.outputs.status == 'failed'
      shell: bash
      run: |
        echo "::warning::Consider setting your job's permissions to none ('permissions: {}') or to the minimum scope needed."
        exit 1
